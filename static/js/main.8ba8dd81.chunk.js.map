{"version":3,"sources":["components/ErasList.js","components/EraCard.js","components/LoadingIndicator.js","containers/ErasContainer.js","actions/fetchEras.js","components/DinoTypeCard.js","components/DinoTypesList.js","containers/DinoTypesContainer.js","actions/fetchDinoTypes.js","actions/editDinosaur.js","components/DinosaurEdit.js","components/DeleteButton.js","components/DeleteConfirm.js","components/DinosaurCard.js","helpers/DinoSelector.js","actions/addDinosaur.js","components/DinosaurInput.js","components/DinosaursList.js","actions/fetchDinosaurs.js","containers/DinosaursContainer.js","actions/deleteDinosaur.js","App.js","index.js","reducers/erasReducer.js","reducers/dinoTypesReducer.js","reducers/dinosaursReducer.js"],"names":["ErasList","props","_jsx","children","CardColumns","listEras","EraCard","Card","variant","style","width","className","id","_jsxs","Link","to","concat","name","Img","src","pictureUrl","alt","Title","LoadingIndicator","promiseInProgress","usePromiseTracker","height","display","justifyContent","alignItems","Loader","type","color","_Fragment","ErasContainer","React","Component","constructor","arguments","this","eras","map","era","index","picture_url","componentDidMount","trackPromise","fetchEras","render","Container","connect","state","dispatch","fetch","then","resp","json","payload","DinoTypeCard","Col","DinoTypesList","Row","xs","md","listDinoTypes","DinoTypesContainer","super","dinotypes","dinotype","url","routeParam","match","params","fetchDinoTypes","Fragment","slug","editDinosaur","dinosaur","era_id","dino_type_id","headers","method","body","JSON","stringify","response","dino","DinosaurEdit","handleOnChange","event","setState","target","value","handleOnSubmit","preventDefault","collapse","document","getElementById","click","dinoId","dinoName","size","dinoSize","weight","dinoWeight","temporal_range","dinoRange","year_discovered","dinoYear","dinoPic","summary","dinoSummary","dinoTypeId","onSubmit","href","onChange","required","dinoType","placeholder","maxLength","rows","cols","onClick","defaultProps","dinosaurs","DeleteButton","handleDelete","DeleteConfirm","Modal","show","showModal","onHide","handleClose","Header","closeButton","Body","Footer","Button","DinosaurCard","setShow","useState","yearDiscovered","temporalRange","Text","Accordion","Toggle","as","eventKey","Collapse","dino_type","dinotypeId","handleShow","dinosaurId","dinoTypeSelector","console","log","addDinosaur","data","includes","eraSelector","DinosaurInput","rel","Form","Group","controlId","Label","Control","custom","block","DinosaursList","listDinos","fetchDinosaurs","DinosaursContainer","deleteDinosaur","showHide","hideComponent","bind","eraId","App","renderTooltip","Tooltip","Router","Jumbotron","OverlayTrigger","placement","delay","hide","overlay","Switch","Route","exact","path","component","rootReducer","combineReducers","length","undefined","action","_state$dinosaurs","filter","dinos","first","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","Provider"],"mappings":"wNAsBeA,MAlBGC,GAGlBC,cAAA,OAAAC,SACED,cAAA,UAAAC,SACED,cAACE,IAAW,CAAAD,SACVD,cAAA,OAAAC,SACGF,EAAMI,iB,qBCkBAC,MAxBEL,GAKXC,cAACK,IAAI,CACHC,QAAU,MAEVC,MAAO,CAAEC,MAAO,OAChBC,UAAU,OACVC,GAAG,WAAUT,SAEfU,eAACC,IAAI,CAACC,GAAE,KAAAC,OAAOf,EAAMgB,KAAI,eAAcd,SAAA,CACrCD,cAACK,IAAKW,IAAG,CAACC,IAAKlB,EAAMmB,WAAYC,IAAI,sBACpCnB,cAACK,IAAKe,MAAK,CAAAnB,SACZD,cAAA,MAAIS,UAAY,cAAcC,GAAG,WAAUT,SAAEF,EAAMgB,aAR9ChB,EAAMW,I,iCC+BFW,MAvCStB,IAEtB,MAAMsB,EAAoBtB,IACtB,MAAM,kBAAEuB,GAAsBC,8BAE7B,OAAOD,GAENtB,cAAA,OACAO,MAAS,CACPC,MAAO,OACPgB,OAAQ,MACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UACZ1B,SAGAD,cAAC4B,IAAM,CAACC,KAAK,UAAUC,MAAM,UAAUN,OAAO,MAAMhB,MAAM,SACpD,EAQd,OACEG,eAAAoB,WAAA,CAAA9B,SAAA,CACED,cAACqB,EAAgB,IACjBrB,cAAA,WACC,ECzBT,MAAMgC,UAAsBC,IAAMC,UAAUC,cAAA,SAAAC,WAAA,KAS1CjC,SAAW,IAGLkC,KAAKtC,MAAMuC,KAAKA,KAAKC,KAAI,CAACC,EAAKC,IAC/BzC,cAACI,EAAO,CAENM,GAAI8B,EAAI9B,GACRK,KAAMyB,EAAIzB,KACVG,WAAYsB,EAAIE,aAHXD,IAOZ,CAlBDE,oBACEC,uBACAP,KAAKtC,MAAM8C,YAEb,CAgBAC,SACE,OAEAnC,eAACoC,IAAS,CAAA9C,SAAA,CACdD,cAAA,SACMW,eAAA,MAAIF,UAAY,cAAaR,SAAA,CAAC,8BACDD,cAAA,SAAMA,cAAA,YAEnCA,cAACqB,EAAgB,IACfrB,cAAA,OAAAC,SACED,cAACF,EAAQ,CAACK,SAAUkC,KAAKlC,eAE7BH,cAAA,SAAMA,cAAA,WAGV,EAYagD,mBANSC,IACf,CACLX,KAAMW,EAAMX,QAIwB,CAACO,UCxDlC,WACL,OAAQK,GACCC,MAAM,2CACVC,MAAMC,GAASA,EAAKC,SACpBF,MAAMd,GACLY,EAAS,CACPrB,KAAM,aACN0B,QAASjB,KAInB,GD6CeU,CAAsChB,G,QEVtCwB,MAtBOzD,GAGlBC,cAACyD,IAAG,CAAAxD,SACJD,cAACK,IAAI,CAGLE,MAAO,CAAEC,MAAO,OAChBC,UAAU,OAAMR,SAEZU,eAACC,IAAI,CAACC,GAAE,IAAAC,OAAMf,EAAMgB,KAAI,cAAad,SAAA,CACrCD,cAACK,IAAKW,IAAG,CAACC,IAAOlB,EAAMmB,WAAYC,IAAI,uBAAuBV,UAAU,iBACxEE,eAACN,IAAKe,MAAK,CAAAnB,SAAA,CAAEF,EAAMgB,KAAK,WANvBhB,EAAMW,M,QCKAgD,MAhBQ3D,GAIrBC,cAAA,UAAAC,SACAD,cAAC2D,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAGpD,UAAU,MAAKR,SAEtBF,EAAM+D,kBCpBpB,MAAMC,UAA2B9B,IAAMC,UAErCC,YAAYpC,GACViE,MAAMjE,GAAO,KAYjB+D,cAAgB,KACd,GAAIzB,KAAKtC,MAAMkE,UAAUA,UACvB,OACE5B,KAAKtC,MAAMkE,UAAUA,UAAU1B,KAAI,CAAC2B,EAAUzB,IAC5CzC,cAACwD,EAAY,CAEX9C,GAAIwD,EAASxD,GACbK,KAAMmD,EAASnD,KACfG,WAAYgD,EAASxB,aAHhBD,IAMX,EAtBAJ,KAAKY,MAAQ,CACPkB,IAAK9B,KAAK+B,WAAarE,EAAMsE,MAAMC,OAAOvD,KAC1CkD,UAAW,GAEnB,CAEFtB,oBACIN,KAAKtC,MAAMwE,eAAelC,KAAKY,MAAMkB,IACzC,CAmBErB,SACE,OAEJnC,eAACsB,IAAMuC,SAAQ,CAAAvE,SAAA,CACTU,eAACoC,IAAS,CAAA9C,SAAA,CACVD,cAACqB,EAAgB,IACfV,eAAA,MAAIF,UAAY,cAAaR,SAAA,CAC3BD,cAAA,SAAM,+CACwCA,cAAA,SAAMA,cAAA,YAEtDA,cAAC0D,EAAa,CAACI,cAAezB,KAAKyB,qBAI3C9D,cAAA,SAAM,IAACA,cAAA,SAAMA,cAAA,WAIX,EAUagD,mBAPUC,IAChB,CACLgB,UAAWhB,EAAMgB,UACjBE,IAAKlB,EAAMkB,OAIyB,CAACI,eClEVJ,IAK/B,IAAIM,EAAgB,aAARN,EAAuB,IAAiB,aAARA,EAAuB,IAAQ,IAE3E,OAAQjB,GAGCC,MAAM,2CAADrC,OAA4C2D,EAAI,gBAC3DrB,MAAKC,GAAQA,EAAKC,SAClBF,MAAKa,GAAaf,EAAS,CACxBrB,KAAM,kBACN0B,QAASU,KAEV,GDkDUjB,CAA4Ce,GEpEpD,MAAMW,EAAgBC,GAErBzB,IACLC,MAAM,2CAADrC,OAA4C6D,EAASC,OAAM,gBAAA9D,OAAe6D,EAASE,aAAY,eAAA/D,OAAc6D,EAASjE,IAAM,CAC9HoE,QAAS,CACP,eAAgB,mBAChB,OAAU,oBAEZC,OAAQ,QACRC,KAAMC,KAAKC,UAAUP,KAGtBvB,MAAK+B,GAAYA,EAAS7B,SAC1BF,MAAKgC,GAAQlC,EAAS,CAACrB,KAAM,gBAAiB0B,QAAS6B,KAAO,ECRnE,MAAMC,UAAqBpD,IAAMC,UAC/BC,YAAYpC,GACViE,MAAMjE,GAAO,KA+BjBuF,eAAkBC,IAChBlD,KAAKmD,SAAS,CACZ,CAACD,EAAME,OAAO1E,MAAOwE,EAAME,OAAOC,OAClC,EACH,KAEDC,eAAkBJ,IAChBA,EAAMK,iBACN,IAAIjB,EAAW,IAAItC,KAAKY,MAAOvC,GAAI2B,KAAKY,MAAMvC,IAC9C2B,KAAKtC,MAAM2E,aAAaC,EAAS,EAClC,KAEDkB,SAAW,KACUC,SAASC,eAAe1D,KAAKY,MAAMvC,IACzCsF,OAAO,EA5ClB3D,KAAKY,MAAS,CACZvC,GAAI2B,KAAKtC,MAAMkG,OACflF,KAAMsB,KAAKtC,MAAMmG,SACjBC,KAAM9D,KAAKtC,MAAMqG,SACjBC,OAAQhE,KAAKtC,MAAMuG,WACnBC,eAAgBlE,KAAKtC,MAAMyG,UAC3BC,gBAAiBpE,KAAKtC,MAAM2G,SAC5BhE,YAAaL,KAAKtC,MAAM4G,QACxBC,QAASvE,KAAKtC,MAAM8G,YACpBhC,aAAcxC,KAAKtC,MAAM+G,WACzBlC,OAAQvC,KAAKtC,MAAMyC,IAErB,CAEJG,oBAaE,CAuBAG,SAEE,OACA9C,cAAA,OAAAC,SACGU,eAAA,QAAMoG,SAAU1E,KAAKsD,eAAe1F,SAAA,CACnCD,cAAA,MAAAC,SAAI,oBACJU,eAAA,SAAAV,SAAA,CAAO,kDAA+CD,cAAA,KAAGgH,KAAK,yCAAwC/G,SAAC,eAAc,yEACrHD,cAAA,SAAM,IAACA,cAAA,SAELW,eAAA,SAAAV,SAAA,CAEAD,cAAA,SAAAC,SAAO,kEAAqED,cAAA,SAE1EW,eAAA,UAAQF,UAAU,eAChBM,KAAK,eACLL,GAAG,eACHgF,MAAOrD,KAAKY,MAAM4B,aAAexC,KAAKY,MAAM4B,aAAe,GAC3DoC,SAAU5E,KAAKiD,eACf4B,UAAQ,EAAAjH,SAAA,CACRD,cAAA,UAAQ0F,MAAM,KACd1F,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,uBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,uBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,mBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,oBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,uBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,uBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,mBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,oBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,yBAClBD,cAAA,UAAQ0F,MAAM,KAAIzF,SAAC,yBACnBD,cAAA,UAAQ0F,MAAM,KAAIzF,SAAC,qBACnBD,cAAA,UAAQ0F,MAAM,KAAIzF,SAAC,yBAErBD,cAAA,SAAM,IAACA,cAAA,SAEPA,cAAA,SAAO6B,KAAK,SAASd,KAAK,YAAY2E,MAAOrD,KAAKtC,MAAMoH,WAEtDxG,eAAA,OAAKF,UAAU,8BAA6BR,SAAA,CAC1CU,eAAA,OAAKF,UAAU,WAAUR,SAAA,CACvBD,cAAA,SAAAC,SAAO,kBAAqBD,cAAA,SAAMA,cAAA,SAClCA,cAAA,SAAO6B,KAAK,OAAOd,KAAK,OAAOqG,YAAY,gBAAgB1B,MAAOrD,KAAKY,MAAMlC,KAAMkG,SAAU5E,KAAKiD,eAAgB4B,UAAQ,IAAElH,cAAA,YAG5HW,eAAA,OAAKF,UAAU,WAAUR,SAAA,CACzBD,cAAA,SAAAC,SAAO,kBAAqBD,cAAA,SAC5BA,cAAA,SAAAC,SAAO,YAAeD,cAAA,SACtBA,cAAA,SAAO6B,KAAK,SAASd,KAAK,OAAOqG,YAAY,gBAAgB1B,MAAOrD,KAAKY,MAAMkD,KAAMc,SAAU5E,KAAKiD,oBAEtG3E,eAAA,OAAKF,UAAU,WAAUR,SAAA,CACvBD,cAAA,SAAAC,SAAO,oBAAuBD,cAAA,SAC9BA,cAAA,SAAAC,SAAOD,cAAA,KAAGgH,KAAO,mFAAkF/G,SAAC,wBAA6BD,cAAA,SACjIA,cAAA,SAAO6B,KAAK,SAASd,KAAK,SAASqG,YAAY,kBAAkB1B,MAAOrD,KAAKY,MAAMoD,OAAQY,SAAU5E,KAAKiD,oBAG5G3E,eAAA,OAAKF,UAAU,WAAUR,SAAA,CACzBD,cAAA,SAAAC,SAAO,mBACLD,cAAA,SAAOU,GAAG,oBAAoBD,UAAU,uBAAsBR,SAAC,4CAC/DD,cAAA,SAAO6B,KAAK,OAAOd,KAAK,iBAAiBqG,YAAY,iBAAiB1B,MAAOrD,KAAKY,MAAMsD,eAAgBU,SAAU5E,KAAKiD,oBAI7H3E,eAAA,OAAKF,UAAU,WAAUR,SAAA,CACnBD,cAAA,SAAAC,SAAO,oBAAuBD,cAAA,SAC9BA,cAAA,SAAO6B,KAAK,SAASd,KAAK,kBAAkBqG,YAAY,kBAAkB1B,MAAOrD,KAAKY,MAAMwD,gBAAiBQ,SAAU5E,KAAKiD,oBAGlI3E,eAAA,OAAKF,UAAU,WAAUR,SAAA,CACnBD,cAAA,SAAAC,SAAO,gBAAmBD,cAAA,SAC1BA,cAAA,SAAO6B,KAAK,MAAMd,KAAK,cAAcqG,YAAY,oDAAoD1B,MAAOrD,KAAKY,MAAMP,YAAauE,SAAU5E,KAAKiD,eAAgB4B,UAAQ,IAAGlH,cAAA,YAIpLW,eAAA,OAAKF,UAAU,WAAUR,SAAA,CACnBD,cAAA,SAAOU,GAAG,cAAaT,SAAC,kCAAqCD,cAAA,SAC7DA,cAAA,YAAUe,KAAK,UAAUL,GAAG,cAAc2G,UAAU,MAAMC,KAAK,KAAKC,KAAK,KAAKH,YAAY,cAAc1B,MAAOrD,KAAKY,MAAM2D,QAASK,SAAU5E,KAAKiD,iBAAkBtF,cAAA,kBAQxKA,cAAA,SAAO6B,KAAK,SAAS6D,MAAM,iBAAiB8B,QAAUnF,KAAKwD,eAKvE,EAGFR,EAAaoC,aAAe,CAC1BC,UAAW,CAAC,GAOC1E,kBAAS,KAAM,CAAC0B,gBAAhB1B,CAA+BqC,G,kBC5I/BsC,MAZO5H,GAIhBC,cAAA,OAAAC,SAEEU,eAAA,UAAQF,UAAU,iBAAiB+G,QAASA,IAAMzH,EAAM6H,aAAa7H,EAAM4E,UAAU1E,SAAA,CAAC,UAAQF,EAAM4E,SAAS5D,UCkBtG8G,MAvBS9H,GAMpBY,eAACmH,IAAK,CAACC,KAAMhI,EAAMiI,UAAWC,OAAQlI,EAAMmI,YAAYjI,SAAA,CACxDD,cAAC8H,IAAMK,OAAM,CAACC,aAAW,EAAAnI,SACvBD,cAAC8H,IAAM1G,MAAK,CAAAnB,SAAC,oBAEfD,cAAC8H,IAAMO,KAAI,CAAApI,SAAA,GAAAa,OAAKf,EAAM4E,SAAS5D,KAAI,2BACnCJ,eAACmH,IAAMQ,OAAM,CAAArI,SAAA,CACXD,cAACuI,IAAM,CAACjI,QAAQ,YAAYkH,QAASzH,EAAMmI,YAAYjI,SAAC,WAGxDD,cAAC2H,EAAY,CAAChD,SAAY5E,EAAM4E,SAAUiD,aAAgB7H,EAAM6H,qB,SCdtE,MAAMY,EAAgBzI,IAGpB,MAAOgI,EAAMU,GAAWC,oBAAS,GAQjC,OAEE1I,cAACiC,IAAMuC,SAAQ,CAAAvE,SACXD,cAACyD,IAAG,CAAAxD,SACAU,eAACN,IAAI,CAACI,UAAU,+DAA+DC,GAAG,YAAWT,SAAA,CACzFD,cAAA,OAAKiB,IAAOlB,EAAMmB,WAAYC,IAAM,sCAClCnB,cAACK,IAAK8H,OAAM,CAAAlI,SAAEF,EAAMgB,OACpBJ,eAAA,KAAAV,SAAA,CAAG,SAAOF,EAAMoG,KAAK,IAAEpG,EAAMoG,KAAO,OAAS,IAAI,OACjDxF,eAAA,KAAAV,SAAA,CAAG,WAASF,EAAMsG,OAAO,IAAEtG,EAAMsG,OAAS,SAAW,IAAI,QACzD1F,eAAA,KAAAV,SAAA,CAAG,qBAAmBF,EAAM4I,eAAe,IAAE5I,EAAM4I,eAAiB,GAAK,IAAI,OAC7EhI,eAAA,KAAAV,SAAA,CAAG,gBAAcF,EAAM6I,iBACvB5I,cAACK,IAAKwI,KAAI,CAAA5I,SAAEF,EAAM6G,UAEpBjG,eAACmI,IAAS,CAAA7I,SAAA,CACRU,eAACN,IAAI,CAAAJ,SAAA,CACHD,cAACK,IAAK8H,OAAM,CAAAlI,SACVD,cAAC8I,IAAUC,OAAM,CAACC,GAAIT,IAAQ7H,GAAIX,EAAMW,GAAIuI,SAAS,IAAGhJ,SACtDU,eAAA,QAAAV,SAAA,CAAM,QAAMF,EAAMgB,YAGxBf,cAAC8I,IAAUI,SAAQ,CAACD,SAAS,IAAGhJ,SAC9BD,cAACK,IAAKgI,KAAI,CAAApI,SACRD,cAACqF,EAAY,CACXV,SAAU5E,EAAM4E,SAChBR,IAAKpE,EAAMoE,IACX8B,OAAUlG,EAAMW,GAChBwF,SAAYnG,EAAMgB,KAClBqF,SAA2B,OAAfrG,EAAMoG,KAAgBpG,EAAMoG,KAAO,GAC/CG,WAA+B,OAAjBvG,EAAMsG,OAAkBtG,EAAMsG,OAAS,GACrDG,UAAqC,OAAxBzG,EAAM6I,cAAyB7I,EAAM6I,cAAgB,GAClElC,SAAqC,OAAzB3G,EAAM4I,eAA0B5I,EAAM4I,eAAiB,GACnEhC,QAAW5G,EAAMmB,WACjB2F,YAAiC,OAAlB9G,EAAM6G,QAAmB7G,EAAM6G,QAAU,GACxDpE,IAAQzC,EAAM4E,SAASwE,UAAUvE,OACjCkC,WAAc/G,EAAMqJ,oBAMxBpJ,cAACK,IAAI,CAAAJ,SACHU,eAACN,IAAKgI,KAAI,CAAApI,SAAA,CAEVU,eAAA,UAAQF,UAAU,iBAAiB+G,QAjDpC6B,IAAMZ,GAAQ,GAiD0CxI,SAAA,CAAC,UAAQF,EAAMgB,QAEtEf,cAAC6H,EAAa,CAACG,UAAWD,EAAMG,YApDhCA,IAAMO,GAAQ,GAoD8Cb,aAAgB7H,EAAM6H,aAAcjD,SAAU5E,EAAM4E,SAAU2E,WAAYvJ,EAAMW,GAAIK,KAAMhB,EAAMgB,KAAM6G,aAAgB7H,EAAM6H,6BAOnL,EAG3BY,EAAaf,aAAe,CAC1Bd,QAAS,uIAII6B,QC7ER,MAAMe,EAAoBpF,IAC/B,IAAIiB,EACN,OAAQjB,GACN,IAAK,qBACLiB,EAAO,IACL,MACF,IAAK,qBACHA,EAAO,IACP,MACD,IAAK,iBACJA,EAAO,IACP,MACF,IAAK,kBACHA,EAAO,IACP,MACF,IAAK,qBACHA,EAAO,IACP,MACF,IAAK,qBACHA,EAAO,IACP,MACA,IAAK,iBACHA,EAAO,IACP,MACF,IAAK,kBACHA,EAAO,IACP,MACF,IAAK,uBACHA,EAAO,IACP,MACF,IAAK,uBACHA,EAAO,KACP,MACF,IAAK,mBACHA,EAAO,KACP,MACF,IAAK,oBACHA,EAAO,KACP,MACJ,QACAoE,QAAQC,IAAI,6BAGZ,OAAOrE,CAAI,ECxCAsE,EAAcA,CAACC,EAAMxF,KAChCoF,EAAiBpF,GAITjB,GACCC,MAAM,2CAADrC,ODqCYqD,IACtBA,EAAIyF,SAAS,YACR,EACEzF,EAAIyF,SAAS,YACf,EACEzF,EAAIyF,SAAS,cACf,OADF,EC1CmDC,CAAY1F,GAAI,gBAAArD,OAAeyI,EAAiBpF,GAAI,cAAc,CACxHW,QAAS,CACP,eAAgB,mBAChB,OAAU,oBAEZC,OAAQ,OACRC,KAAMC,KAAKC,UAAUyE,KAEtBvG,MAAK+B,GAAYA,EAAS7B,SAE1BF,MAAKuB,GAEJzB,EAAS,CAACrB,KAAM,eAAgB0B,QAASoB,O,aChB/C,MAAMmF,UAAsB7H,IAAMC,UAAUC,cAAA,SAAAC,WAAA,KAC5Ca,MAAQ,CACNlC,KAAM,GACNoF,KAAM,GACNE,OAAQ,GACRE,eAAgB,GAChBE,gBAAiB,GACjB/D,YAAa,GACbkE,QAAS,GACT/B,aAAcxC,KAAKtC,MAAMoH,UAC1B,KAGD7B,eAAkBC,IAChBlD,KAAKmD,SAAS,CACZ,CAACD,EAAME,OAAO1E,MAAOwE,EAAME,OAAOC,OAClC,EACH,KAEDC,eAAkBJ,IAChBA,EAAMK,iBACNvD,KAAKtC,MAAM2J,YAAYrH,KAAKY,MAAOZ,KAAKtC,MAAMoE,KAC9C9B,KAAKmD,SACH,CAAEzE,KAAM,GACNoF,KAAM,GACNE,OAAQ,GACRE,eAAgB,GAChBE,gBAAiB,GACjB/D,YAAa,GACbkE,QAAS,GACT/B,aAAc,KAGlBxC,KAAKwD,UAAU,EAChB,KAEDA,SAAW,KACUC,SAASC,eAAe,OAC9BC,OAAO,CAErB,CAEClD,SAEE,OACEnC,eAACsB,IAAMuC,SAAQ,CAAAvE,SAAA,CACbD,cAAA,MAAAC,SAAI,mBACJU,eAAA,SAAOF,UAAU,uBAAsBR,SAAA,CAAC,sDAAmDD,cAAA,KAAGgH,KAAK,gDAAgDvB,OAAO,SAASsE,IAAI,aAAY9J,SAAC,+BAA8B,yEAC1ND,cAAA,SAEQW,eAACqJ,IAAI,CAACjD,SAAU1E,KAAKsD,eAAe1F,SAAA,CAClCU,eAACqJ,IAAKC,MAAK,CAACC,UAAU,YAAWjK,SAAA,CAC/BD,cAACgK,IAAKG,MAAK,CAAAlK,SAAC,kEAEZU,eAACqJ,IAAKI,QAAO,CAACpB,GAAG,SAASqB,QAAM,EAC9BlE,KAAK,KACLpF,KAAK,eACLL,GAAG,eACHgF,MAAOrD,KAAKtC,MAAMoH,SAClBF,SAAU5E,KAAKiD,eACf4B,UAAQ,EAAAjH,SAAA,CACRD,cAAA,UAAQ0F,MAAM,KACd1F,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,uBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,uBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,mBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,oBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,uBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,uBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,mBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,oBAClBD,cAAA,UAAQ0F,MAAM,IAAGzF,SAAC,yBAClBD,cAAA,UAAQ0F,MAAM,KAAIzF,SAAC,yBACnBD,cAAA,UAAQ0F,MAAM,KAAIzF,SAAC,qBACnBD,cAAA,UAAQ0F,MAAM,KAAIzF,SAAC,4BAI/BU,eAACqJ,IAAKrG,IAAG,CAAA1D,SAAA,CACPU,eAACqJ,IAAKC,MAAK,CAACjB,GAAIvF,IAAIxD,SAAA,CACdD,cAACgK,IAAKG,MAAK,CAAAlK,SAAC,kBACtBD,cAAA,SAAKA,cAAA,SACKA,cAACgK,IAAKI,QAAO,CAACvI,KAAK,OAAOd,KAAK,OAAOqG,YAAY,gBAAgB1B,MAAOrD,KAAKY,MAAMlC,KAAMkG,SAAU5E,KAAKiD,eAAgB4B,UAAQ,OAGjIvG,eAACqJ,IAAKC,MAAK,CAACjB,GAAIvF,IAAIxD,SAAA,CACpBD,cAACgK,IAAKG,MAAK,CAAAlK,SAAC,kBACZD,cAAA,SAAQS,UAAU,uBAAsBR,SAAC,YACzCD,cAACgK,IAAKI,QAAO,CAACvI,KAAK,SAASd,KAAK,OAAOqG,YAAY,gBAAgB1B,MAAOrD,KAAKY,MAAMkD,KAAMc,SAAU5E,KAAKiD,oBAE3G3E,eAACqJ,IAAKC,MAAK,CAACjB,GAAIvF,IAAIxD,SAAA,CACpBD,cAACgK,IAAKG,MAAK,CAAAlK,SAAC,oBACZD,cAAA,SAAOS,UAAU,uBAAsBR,SAACD,cAAA,KAAGgH,KAAO,mFAAmFvB,OAAO,SAASsE,IAAI,aAAY9J,SAAC,wBACtKD,cAACgK,IAAKI,QAAO,CAACvI,KAAK,SAASd,KAAK,SAASqG,YAAY,kBAAkB1B,MAAOrD,KAAKY,MAAMoD,OAAQY,SAAU5E,KAAKiD,uBAKzH3E,eAACqJ,IAAKrG,IAAG,CAAA1D,SAAA,CACPU,eAACqJ,IAAKC,MAAK,CAACjB,GAAIvF,IAAIxD,SAAA,CAChBD,cAACgK,IAAKG,MAAK,CAAAlK,SAAC,mBACZD,cAAA,SAAOS,UAAU,uBAAsBR,SAAC,4CACtCD,cAACgK,IAAKI,QAAO,CAACvI,KAAK,OAAOd,KAAK,iBAAiBqG,YAAY,iBAAiB1B,MAAOrD,KAAKY,MAAMsD,eAAgBU,SAAU5E,KAAKiD,oBAGpI3E,eAACqJ,IAAKC,MAAK,CAACjB,GAAIvF,IAAIxD,SAAA,CAChBD,cAACgK,IAAKG,MAAK,CAAAlK,SAAC,oBACpBD,cAAA,SAAKA,cAAA,SACCA,cAACgK,IAAKI,QAAO,CAACvI,KAAK,SAASd,KAAK,kBAAkBqG,YAAY,kBAAkB1B,MAAOrD,KAAKY,MAAMwD,gBAAiBQ,SAAU5E,KAAKiD,oBAErI3E,eAACqJ,IAAKC,MAAK,CAACjB,GAAIvF,IAAIxD,SAAA,CACdD,cAACgK,IAAKG,MAAK,CAAAlK,SAAC,gBACZU,eAAA,SAAOF,UAAU,uBAAsBR,SAAA,CAAC,mBAAgBD,cAAA,KAAGyF,OAAO,SAASsE,IAAI,aAAa/C,KAAI,+CAAAlG,OAAiDuB,KAAKY,MAAMlC,KAAI,gCAA+Bd,SAAEoC,KAAKY,MAAMlC,UAC5Mf,cAACgK,IAAKI,QAAO,CAACvI,KAAK,MAAMd,KAAK,cAAcqG,YAAY,oDAAoD1B,MAAOrD,KAAKY,MAAMP,YAAauE,SAAU5E,KAAKiD,eAAgB4B,UAAQ,UAK5LlH,cAACgK,IAAKrG,IAAG,CAAA1D,SACPU,eAACqJ,IAAKC,MAAK,CAAAhK,SAAA,CACHD,cAACgK,IAAKG,MAAK,CAACzJ,GAAG,cAAaT,SAAC,kCAC7BD,cAAA,SACAA,cAAA,SAAOS,UAAU,uBAAsBR,SAAC,yBACxCD,cAACgK,IAAKI,QAAO,CAACpB,GAAG,WAAWjI,KAAK,UAAUsG,UAAU,MAAM3G,GAAG,cAAc4G,KAAK,IAAIC,KAAK,KAAKH,YAAY,cAAc1B,MAAOrD,KAAKY,MAAM2D,QAASK,SAAU5E,KAAKiD,sBAGnKtF,cAACuI,IAAM,CAAC1G,KAAK,SAASvB,QAAQ,UAAU6F,KAAK,KAAKmE,OAAK,EAAArK,SAAC,uBAMhE,EAKa+C,kBAAQ,KAAM,CAAC0G,eAAf1G,CAA6B8G,GC3H7BS,MAfQxK,GAInBC,cAAC2D,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAGpD,UAAU,MAAKR,SAG7BF,EAAMyK,YCTR,SAASC,EAAetG,GAE/B,OAAQjB,GA2DCC,MAAM,2CAADrC,OAXSqD,IAEfA,EAAIyF,SAAS,YACR,EACEzF,EAAIyF,SAAS,YACf,EACEzF,EAAIyF,SAAS,cACf,OADF,EAK+CC,CAAY1F,GAAI,gBAAArD,OAzD9CqD,KACxB,IAAIiB,EACN,OAAQjB,GACN,IAAK,qBACLiB,EAAO,IACL,MACF,IAAK,qBACHA,EAAO,IACP,MACD,IAAK,iBACJA,EAAO,IACP,MACF,IAAK,kBACHA,EAAO,IACP,MACF,IAAK,qBACHA,EAAO,IACP,MACF,IAAK,qBACHA,EAAO,IACP,MACA,IAAK,iBACHA,EAAO,IACP,MACF,IAAK,kBACHA,EAAO,IACP,MACF,IAAK,uBACHA,EAAO,IACP,MACF,IAAK,uBACHA,EAAO,KACP,MACF,IAAK,mBACHA,EAAO,KACP,MACF,IAAK,oBACHA,EAAO,KACP,MACJ,QACAoE,QAAQC,IAAI,6BAGZ,OAAOrE,CAAI,EAc0EmE,CAAiBpF,GAAI,eAC3Gf,MAAKC,GAAQA,EAAKC,SAClBF,MAAKsE,GAAaxE,EAAS,CACxBrB,KAAM,kBACN0B,QAASmE,KAGb,CCxDF,MAAMgD,UAA2BzI,IAAMC,UAErCC,YAAYpC,GACViE,MAAMjE,GAAO,KAajB6H,aAAgBjD,IACZtC,KAAKtC,MAAM4K,eAAehG,EAASjE,GAAIiE,EAASwE,UAAUzI,GAAIiE,EAASwE,UAAUvE,OAAO,EACzF,KAQH4F,UAAY,KAEV,GAAInI,KAAKtC,MAAM2H,UAAUA,UACvB,OACErF,KAAKtC,MAAM2H,UAAUA,UAAUnF,KAAI,CAACoC,EAAUlC,IACnCzC,cAAA,OAAAC,SACGD,cAACwI,EAAY,CACX9H,GAAIiE,EAASjE,GACbK,KAAM4D,EAAS5D,KACfoF,KAAMxB,EAASwB,KACfE,OAAQ1B,EAAS0B,OACjBuC,cAAejE,EAAS4B,eACxBoC,eAAgBhE,EAAS8B,gBACzBvF,WAAYyD,EAASjC,YACrBkE,QAASjC,EAASiC,QAClBwC,WAAYzE,EAASE,aACrB+C,aAAcvF,KAAKuF,aACnBjD,SAAYA,KAZPA,EAASjE,KAgBxB,EA3CR2B,KAAKY,MAAQ,CACPkB,IAAK9B,KAAK+B,WAAarE,EAAMsE,MAAMC,OAAOvD,KAC1C6J,UAAU,EACVlD,UAAW,IAEfrF,KAAKwI,cAAgBxI,KAAKwI,cAAcC,KAAKzI,KAC/C,CAEFM,oBACEN,KAAKtC,MAAM0K,eAAepI,KAAKY,MAAMkB,IACvC,CAMF0G,cAAc9J,GACC,aAATA,GACFsB,KAAKmD,SAAS,CAAEoF,UAAWvI,KAAKY,MAAM2H,UAE1C,CA0BE9H,SACE,MAAM,SAAE8H,GAAavI,KAAKY,MAE1B,OAIEtC,eAACoC,IAAS,CAACrC,GAAG,iBAAgBT,SAAA,CAC5BD,cAAA,OAAKS,UAAU,cAAaR,SAC1BD,cAACuI,IAAM,CACP7H,GAAG,MACHJ,QAAQ,UACRkH,QAASA,IAAMnF,KAAKwI,cAAc,YAAY5K,UAE9B,IAAb2K,EAAqB,6BAA+B,gBAKzDjK,eAAA,OAAAV,SAAA,CAAK,IAAE2K,GAAY5K,cAAC8J,EAAa,CAAC3F,IAAK9B,KAAKY,MAAMkB,IAAKgD,SAAUoC,EAAiBlH,KAAKY,MAAMkB,OAAQnE,cAAA,YAErGA,cAACuK,EAAa,CAACC,UAAYnI,KAAKmI,gBAQpC,EAWWxH,mBARf,SAAyBC,GACvB,MAAO,CACLyE,UAAWzE,EAAMyE,UACjBvD,IAAKlB,EAAMkB,IAEf,GAGwC,CAACsG,iBAAgBf,cAAahF,eAAciG,eCvGtDA,CAACrB,EAAYxC,EAAYiE,IAE3C7H,IAERC,MAAM,2CAADrC,OAA4CiK,EAAK,gBAAAjK,OAAegG,EAAU,eAAAhG,OAAcwI,GAAc,CACzGvE,OAAQ,SACRD,QAAS,CACP,eAAgB,sBAGnB1B,MAAK+B,GAAYA,EAAS7B,SAC1BF,MAAKuB,GAAYzB,EAAS,CAAErB,KAAM,kBAAmByH,gBAAc,GD4FzDtG,CAAsF0H,G,+BE1FrG,MAAMM,UAAY/I,IAAMC,UAAUC,cAAA,SAAAC,WAAA,KAOlC6I,cAAiBlL,GACfC,cAACkL,IAAO,IAAKnL,EAAKE,SAAE,oBAGpB,CARF0C,oBACEmD,SAASC,eAAe,gBAAgBC,OAC1C,CAQElD,SACE,OACE9C,cAACmL,IAAM,CAAAlL,SACPU,eAAA,OAAKF,UAAU,MAAKR,SAAA,CAClBU,eAACyK,IAAS,CAAAnL,SAAA,CAEZD,cAACqL,IAAc,CACbC,UAAU,SACVC,MAAO,CAAExD,KAAM,IAAKyD,KAAM,KAC1BC,QAASpJ,KAAK4I,cAAchL,SAG5BD,cAACY,IAAI,CAACC,GAAG,uBAAsBZ,SAC7BD,cAAA,MAAIS,UAAU,cAAcC,GAAG,eAAcT,SAAC,6BAE9B,IAEpBD,cAAA,SAEEA,cAAA,UAAAC,SAAQD,cAAA,MAAAC,SAAI,0DAIdU,eAAC+K,IAAM,CAAAzL,SAAA,CAEHD,cAAC2L,IAAK,CAACC,OAAK,EAACC,KAAK,uBAAuBC,UAAW9J,IACpDhC,cAAC2L,IAAK,CAACC,OAAK,EAACC,KAAK,oBAAoBC,UAAW/H,IACjD/D,cAAC2L,IAAK,CAACC,OAAK,EAACC,KAAK,mBAAmBC,UAAWpB,IAChD1K,cAAC2L,IAAK,CAACC,OAAK,EAACC,KAAK,iBAAiBC,UAAWhC,IAC9C9J,cAAC2L,IAAK,CAACC,OAAK,EAACC,KAAK,wBAAwBC,UAAWzG,WAO7D,EAgBarC,kBAAQ,KAARA,CAAcgI,G,MC/D7B,MAAMe,GAAcC,YAAgB,CAClC1J,KChBa,WAAoD,IAA/BW,EAAKb,UAAA6J,OAAA,QAAAC,IAAA9J,UAAA,GAAAA,UAAA,GAAG,CAAEE,KAAM,IAAM6J,EAAM/J,UAAA6J,OAAA,EAAA7J,UAAA,QAAA8J,EAE9D,MAEO,eAFCC,EAAOtK,KAGJ,IAAKoB,EACVX,KAAM6J,EAAO5I,SAERN,CAEb,EDOEgB,UEjBa,WAA2D,IAAjChB,EAAKb,UAAA6J,OAAA,QAAAC,IAAA9J,UAAA,GAAAA,UAAA,GAAG,CAAC6B,UAAW,IAAKkI,EAAM/J,UAAA6J,OAAA,EAAA7J,UAAA,QAAA8J,EAEtE,MACO,oBADCC,EAAOtK,KAEJ,IAAKoB,EACVgB,UAAWkI,EAAO5I,SAEbN,CAEb,EFSEyE,UGjBa,WAA8D,IAAD0E,EAAA,IAAlCnJ,EAAKb,UAAA6J,OAAA,QAAAC,IAAA9J,UAAA,GAAAA,UAAA,GAAG,CAAEsF,UAAW,IAAMyE,EAAM/J,UAAA6J,OAAA,EAAA7J,UAAA,QAAA8J,EAEzE,OAAQC,EAAOtK,MACb,IAAK,kBACD,MAAO,IACFoB,EACHyE,UAAWyE,EAAO5I,SAE1B,IAAK,eACE,MAAO,IACFN,EACDyE,UAAW,IAAIzE,EAAMyE,UAAWyE,EAAO5I,UAElD,IAAK,kBACI,MAAO,IACPN,EACHyE,UAAW,IAAIzE,EAAMyE,UAAU2E,QAAO1H,GAAYA,EAASjE,KAAOyL,EAAO7C,eAE3E,IAAK,gBAIH,IAAIgD,EAAQrJ,EAAMyE,UAAUnF,KAAIoC,GAC1BA,EAASjE,KAAOyL,EAAO5I,QAAQ7C,GAC1ByL,EAAO5I,QAEPoB,IAIP4H,EAAuB,QAAlBH,EAAGnJ,EAAMyE,iBAAS,IAAA0E,OAAA,EAAfA,EAAkB,GAAGvH,aAC/B,MAAO,IAAI5B,EAAOyE,UAAW4E,EAAMD,QAAOjH,GAAQA,EAAKP,eAAiB0H,KAGxE,QACC,OAAOtJ,EAEZ,IHjBAuJ,GAAoBC,OAAOC,sCAAwCC,IAEzE,IAAIC,GAAQC,YAAYd,GAAaS,GAAiBM,YAAgBC,OAItEC,IAASlK,OAEL9C,cAACiN,IAAQ,CAACL,MAAUA,GAAO3M,SACzBD,cAACgL,EAAG,MAGRlF,SAASC,eAAe,Q","file":"static/js/main.8ba8dd81.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CardColumns } from 'react-bootstrap';\r\n\r\n\r\nconst ErasList = (props) => {\r\n\r\n  return (\r\n<div>\r\n  <center>\r\n    <CardColumns>\r\n      <div>\r\n        {props.listEras}\r\n      </div>\r\n    </CardColumns>\r\n    </center>\r\n</div>\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default ErasList\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\n\r\n\r\nconst EraCard = (props) => {\r\n\r\n  return (\r\n\r\n\r\n      <Card\r\n        variant = 'top'\r\n        key={props.id}\r\n        style={{ width: '200' }}\r\n        className=\"mb-2\"\r\n        id=\"era-card\"\r\n        >\r\n      <Link to={`./${props.name}/dino_types`}>\r\n        <Card.Img src={props.pictureUrl} alt='prehistoric world' />\r\n         <Card.Title>\r\n        <h4 className = 'text-center' id='era-text'>{props.name}</h4>\r\n        </Card.Title>\r\n        </Link>\r\n      </Card>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default EraCard\r\n","import Loader from 'react-loader-spinner';\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\n\r\n\r\nconst LoadingIndicator = (props) => {\r\n\r\n    const LoadingIndicator = (props) => {\r\n        const { promiseInProgress } = usePromiseTracker();\r\n      \r\n         return promiseInProgress && \r\n       \r\n          <div\r\n          style = {{\r\n            width: \"100%\",\r\n            height: \"100\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n          >\r\n            \r\n            <Loader type=\"Circles\" color=\"#00008b\" height=\"300\" width=\"300\" />\r\n            </div>\r\n    \r\n       }\r\n\r\n\r\n\r\n\r\n    \r\n    return (\r\n      <>\r\n        <LoadingIndicator />\r\n        <br />\r\n      </>\r\n\r\n\r\n  \r\n    )\r\n  \r\n  }\r\n  \r\n  \r\n  export default LoadingIndicator\r\n  ","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport ErasList from '../components/ErasList'\r\nimport {fetchEras} from '../actions/fetchEras'\r\nimport EraCard from '../components/EraCard'\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport {Container } from 'react-bootstrap'\r\nimport LoadingIndicator from '../components/LoadingIndicator'\r\n\r\nclass ErasContainer extends React.Component {\r\n\r\n\r\n  componentDidMount(){\r\n    trackPromise(\r\n    this.props.fetchEras()   ///accessing the function through props (instead of on its own) allows us to connect function with Redux Store\r\n    )\r\n  }\r\n\r\n  listEras = () => {\r\n    // if (this.props.eras.eras) {\r\n      return (\r\n        this.props.eras.eras.map((era, index) =>\r\n        <EraCard\r\n          key={index}\r\n          id={era.id}\r\n          name={era.name}\r\n          pictureUrl={era.picture_url} />\r\n        )\r\n      )\r\n    // }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n\r\n    <Container>\r\n<br />\r\n      <h2 className = 'text-center'>\r\n        choose an era to explore...<br /><br />\r\n      </h2>\r\n      <LoadingIndicator /> \r\n        <div>\r\n          <ErasList listEras={this.listEras()}/>\r\n        </div>\r\n      <br /><br />\r\n    </Container>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\n//get redux store and map it to props.  sucessfully getting the eras from our state!\r\nconst mapStateToProps = state => {\r\n  return {\r\n    eras: state.eras\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchEras})(ErasContainer)\r\n","//action creator creates an action object which goes to the reducer, which then returns new state\r\n//thunk will allow us to wrap the fatch in a function\r\n\r\nexport function fetchEras() {\r\n  return (dispatch) => {\r\n    return fetch(\"https://dino24.onrender.com/api/v1/eras\")\r\n      .then((resp) => resp.json())\r\n      .then((eras) =>\r\n        dispatch({\r\n          type: \"FETCH_ERAS\",\r\n          payload: eras,\r\n        })\r\n      );\r\n  };\r\n}\r\n","// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import {Card } from 'react-bootstrap'\r\n\r\n// const DinoTypeCard = (props) => {\r\n\r\n//   return (\r\n//     <Card key={props.id}>\r\n//         <Link to={`/${props.name}/dinosaurs`}>\r\n//         <img src = {props.pictureUrl} alt='Category of Dinosaur' className='card-img-top' />\r\n//           <span className=\"align-bottom\"><h4 className = 'text-center'>{props.name}</h4></span>\r\n//       </Link>\r\n//     </Card>\r\n  \r\n\r\n  \r\n//     )\r\n\r\n// }\r\n\r\n// export default DinoTypeCard\r\n\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Card, Col } from 'react-bootstrap'\r\n\r\nconst DinoTypeCard = (props) => {\r\n\r\n  return (\r\n    <Col>\r\n    <Card\r\n    \r\n    key={props.id}\r\n    style={{ width: '75%' }} \r\n    className=\"mb-5\"\r\n    >\r\n        <Link to={`/${props.name}/dinosaurs`}>\r\n        <Card.Img src = {props.pictureUrl} alt='Category of Dinosaur' className='card-img-top' />\r\n        <Card.Title>{props.name} </Card.Title>\r\n      </Link>\r\n    </Card>\r\n    </Col>\r\n\r\n  \r\n    )\r\n\r\n}\r\n\r\nexport default DinoTypeCard","// import React from 'react'\r\n\r\n\r\n// const DinoTypesList = (props) => {\r\n\r\n//   return (\r\n//        <div>\r\n     \r\n//            <div className=\"d-flex mt-5 justify-content-center\">\r\n//              {props.listDinoTypes}\r\n//            </div>\r\n//        </div>\r\n//      )\r\n//    }\r\n\r\n// export default DinoTypesList\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport { CardColumns, Row, Col, Container } from 'react-bootstrap';\r\n\r\nconst DinoTypesList = (props) => {\r\n\r\n  return (\r\n \r\n  <center>\r\n  <Row xs={1} md={2} className=\"g-4\">\r\n      \r\n             {props.listDinoTypes}\r\n       \r\n    \r\n    </Row>\r\n    </center>\r\n \r\n     )\r\n   }\r\n\r\nexport default DinoTypesList\r\n\r\n \r\n\r\n","\r\nimport React from 'react'\r\nimport DinoTypeCard from '../components/DinoTypeCard'\r\nimport {connect} from 'react-redux'\r\nimport DinoTypesList from '../components/DinoTypesList'\r\nimport {fetchDinoTypes} from '../actions/fetchDinoTypes'\r\nimport { Container } from 'react-bootstrap';\r\nimport LoadingIndicator from '../components/LoadingIndicator'\r\n\r\nclass DinoTypesContainer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n          url: this.routeParam = props.match.params.name,\r\n          dinotypes: ''\r\n      };\r\n  };\r\n\r\ncomponentDidMount(){\r\n    this.props.fetchDinoTypes(this.state.url)  //argument helps interpolate the proper URL in the action\r\n};\r\n\r\n\r\nlistDinoTypes = () => {\r\n  if (this.props.dinotypes.dinotypes) {\r\n    return (\r\n      this.props.dinotypes.dinotypes.map((dinotype, index) =>\r\n        <DinoTypeCard\r\n          key={index} \r\n          id={dinotype.id}\r\n          name={dinotype.name}\r\n          pictureUrl={dinotype.picture_url} />\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n    return (\r\n  \r\n<React.Fragment> \r\n      <Container>\r\n      <LoadingIndicator />\r\n        <h2 className = 'text-center'>\r\n          <br />\r\n            What types of creatures are you looking for?<br /><br />\r\n            </h2>  \r\n        <DinoTypesList listDinoTypes={this.listDinoTypes()}/>\r\n       \r\n        </Container>\r\n\r\n<br /> <br /><br />\r\n</React.Fragment>\r\n \r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dinotypes: state.dinotypes,\r\n    url: state.url\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchDinoTypes} )(DinoTypesContainer)\r\n\r\n\r\n\r\n","\r\n\r\nexport const fetchDinoTypes = (url) => {\r\n\r\n///pseudocode  if eraname=triassic, let url equal 1\r\n//if eraname = jurassic, let url equal 2..\r\n\r\nlet slug = (url === 'Triassic') ? ('1') : ((url === 'Jurassic') ? ('2') : ('3'))\r\n\r\nreturn (dispatch) => {\r\n\r\n  // fetch(`http://localhost:3000/api/v1/eras/${url === 'Triassic' ? '1' : '2'}/dino_types`)  ///should i be fetching to different urls based on the params from the first page?  yes...\r\n  return fetch(`https://dino24.onrender.com/api/v1/eras/${slug}/dino_types`)\r\n  .then(resp => resp.json())\r\n  .then(dinotypes => dispatch({\r\n      type: 'FETCH_DINOTYPES',\r\n      payload: dinotypes\r\n      }))\r\n    }\r\n  }\r\n// }\r\n","export const editDinosaur = (dinosaur) => {\r\n\r\nreturn (dispatch) => {\r\n   fetch(`https://dino24.onrender.com/api/v1/eras/${dinosaur.era_id}/dino_types/${dinosaur.dino_type_id}/dinosaurs/${dinosaur.id}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      method: 'PATCH',\r\n      body: JSON.stringify(dinosaur)\r\n\r\n    })\r\n    .then(response => response.json())\r\n    .then(dino => dispatch({type: 'EDIT_DINOSAUR', payload: dino}))\r\n  }\r\n\r\n}\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {editDinosaur} from '../actions/editDinosaur'\r\n\r\n\r\nclass DinosaurEdit extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state =  {\r\n      id: this.props.dinoId,\r\n      name: this.props.dinoName,\r\n      size: this.props.dinoSize,\r\n      weight: this.props.dinoWeight,\r\n      temporal_range: this.props.dinoRange,\r\n      year_discovered: this.props.dinoYear,\r\n      picture_url: this.props.dinoPic,\r\n      summary: this.props.dinoSummary,\r\n      dino_type_id: this.props.dinoTypeId,\r\n      era_id: this.props.era,\r\n      };\r\n    }\r\n\r\ncomponentDidMount() {\r\n  // this.setState({\r\n  //   id: this.props.dinoId,\r\n  //   name: this.props.dinoName,\r\n  //   size: this.props.dinoSize,\r\n  //   weight: this.props.dinoWeight,\r\n  //   temporal_range: this.props.dinoRange,\r\n  //   year_discovered: this.props.dinoYear,\r\n  //   picture_url: this.props.dinoPic,\r\n  //   summary: this.props.dinoSummary,\r\n  //   dino_type_id: this.props.dinoTypeId,\r\n  //   era_id: this.props.era,\r\n  //\r\n  // })\r\n}\r\n\r\nhandleOnChange = (event) => {\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n}\r\n\r\nhandleOnSubmit = (event) => {\r\n  event.preventDefault()\r\n  let dinosaur = {...this.state, id: this.state.id}\r\n  this.props.editDinosaur(dinosaur)\r\n}\r\n\r\ncollapse = () => {\r\n  let toggleButton = document.getElementById(this.state.id)\r\n  toggleButton.click()\r\n\r\n}\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n    <div>\r\n       <form onSubmit={this.handleOnSubmit}>\r\n        <h5>Edit a Dinosaur</h5>\r\n        <small>HINT: You can find most of the info below from <a href=\"https://en.wikipedia.org/wiki/Dinosaur\">Wikipedia.</a>  At a minimum, please include the category, name and picture URL. </small>\r\n        <br /> <br />\r\n\r\n          <small>\r\n\r\n          <label>Category: When did it live and what kind of dinosaur was it? </label><br />\r\n\r\n            <select className=\"form-control\"\r\n              name=\"dino_type_id\"\r\n              id=\"dino_type_id\"\r\n              value={this.state.dino_type_id ? this.state.dino_type_id : ''}\r\n              onChange={this.handleOnChange}\r\n              required>\r\n              <option value=''></option>\r\n              <option value=\"1\">Triassic Herbivore</option>\r\n              <option value=\"2\">Triassic Carnivore</option>\r\n              <option value=\"3\">Triassic Avian</option>\r\n              <option value=\"4\">Triassic Marine</option>\r\n              <option value=\"5\">Jurassic Herbivore</option>\r\n              <option value=\"6\">Jurassic Carnivore</option>\r\n              <option value=\"7\">Jurassic Avian</option>\r\n              <option value=\"8\">Jurassic Marine</option>\r\n              <option value=\"9\">Cretaceous Herbivore</option>\r\n              <option value=\"10\">Cretaceous Carnivore</option>\r\n              <option value=\"11\">Cretaceous Avian</option>\r\n              <option value=\"12\">Cretaceous Marine</option>\r\n            </select>\r\n            <br /> <br />\r\n\r\n            <input type='hidden' name='dino_type' value={this.props.dinoType} />\r\n\r\n              <div className=\"form-row align-items-center\">\r\n                <div className=\"col-auto\">\r\n                  <label>Dinosaur Name</label><br /><br />\r\n                  <input type='text' name='name' placeholder='Dinosaur Name' value={this.state.name} onChange={this.handleOnChange} required/><br />\r\n                </div>\r\n\r\n                  <div className=\"col-auto\">\r\n                  <label>Dinosaur Size</label><br />\r\n                  <small>In feet</small><br />\r\n                  <input type='number' name='size' placeholder='Dinosaur Size' value={this.state.size} onChange={this.handleOnChange} />\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                  <label>Dinosaur Weight</label><br />\r\n                  <small><a href = 'https://www.google.com/search?q=convert+tons+to+pounds&oq=convert+tons+to+pounds'>Convert from tons</a></small><br />\r\n                  <input type='number' name='weight' placeholder='Dinosaur Weight' value={this.state.weight} onChange={this.handleOnChange} />\r\n                </div>\r\n\r\n                <div className=\"col-auto\">\r\n                <label>Temporal Range</label>\r\n                  <small id=\"passwordHelpBlock\" className=\"form-text text-muted\">When did it live? Example: 150-140 MYA)</small>\r\n                  <input type='text' name='temporal_range' placeholder='Temporal Range' value={this.state.temporal_range} onChange={this.handleOnChange} />\r\n              </div>\r\n\r\n\r\n            <div className=\"col-auto\">\r\n                  <label>Year Discovered</label><br />\r\n                  <input type='number' name='year_discovered' placeholder='Year Discovered' value={this.state.year_discovered} onChange={this.handleOnChange} />\r\n            </div>\r\n\r\n            <div className=\"col-auto\">\r\n                  <label>Picture URL</label><br />\r\n                  <input type='url' name='picture_url' placeholder='Paste the URL of a picture of this dinosaur here.' value={this.state.picture_url} onChange={this.handleOnChange} required /><br />\r\n\r\n            </div>\r\n\r\n            <div className=\"col-auto\">\r\n                  <label id='description'>Fun Fact or Brief Description</label><br />\r\n                  <textarea name='summary' id='description' maxLength=\"500\" rows=\"12\" cols=\"30\" placeholder='Description' value={this.state.summary} onChange={this.handleOnChange} /><br />\r\n            </div>\r\n\r\n                  </div>\r\n\r\n\r\n            </small>\r\n\r\n              <input type='submit' value='Commit Changes' onClick= {this.collapse} />\r\n\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nDinosaurEdit.defaultProps = {\r\n  dinosaurs: {}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default connect (null, {editDinosaur})(DinosaurEdit)\r\n","import React from 'react';\r\n// import Button from 'react-bootstrap/Button';\r\n\r\n//only used for dinosaurs here but could potentially be used on components for eras or dino_types in the future if more were to be added.\r\nconst DeleteButton = (props) => {\r\n\r\n  return (\r\n\r\n      <div>\r\n\r\n        <button className=\"btn btn-danger\" onClick={() => props.handleDelete(props.dinosaur)}>Delete {props.dinosaur.name}</button>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default DeleteButton\r\n","import React from 'react';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport DeleteButton from '../components/DeleteButton'\r\n\r\n\r\nconst DeleteConfirm = ( props ) => {\r\n\r\n\r\n\r\nreturn (\r\n\r\n    <Modal show={props.showModal} onHide={props.handleClose}>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Are you sure?</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>{`${props.dinosaur.name} will become extinct.`}</Modal.Body>\r\n    <Modal.Footer>\r\n      <Button variant=\"secondary\" onClick={props.handleClose}>\r\n        Cancel\r\n      </Button>\r\n      <DeleteButton dinosaur = {props.dinosaur} handleDelete = {props.handleDelete} />\r\n    </Modal.Footer>\r\n  </Modal>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default DeleteConfirm\r\n\r\n","import React from 'react'\r\nimport DinosaurEdit from '../components/DinosaurEdit'\r\nimport DeleteConfirm from '../components/DeleteConfirm'\r\nimport { Col, Card, Accordion, Button } from 'react-bootstrap'\r\nimport { useState } from \"react\";\r\n\r\nconst DinosaurCard = (props) => {\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n\r\n    <React.Fragment>\r\n        <Col>\r\n            <Card className=\"card card-inverse card-success card-primary mb-3 text-center\" id=\"dino-card\">\r\n                <img src = {props.pictureUrl} alt = 'Artist impression of {props.name}' />\r\n                  <Card.Header>{props.name}</Card.Header>\r\n                  <p>Size: {props.size} {props.size ? \"feet\" : \"?\"} </p>\r\n                  <p>Weight: {props.weight} {props.weight ? \"pounds\" : \"?\"}  </p>\r\n                  <p>Year Discovered:  {props.yearDiscovered} {props.yearDiscovered ? \"\" : \"?\"} </p>\r\n                  <p>Years Lived: {props.temporalRange}</p>\r\n                  <Card.Text>{props.summary}</Card.Text>\r\n                  {/* <br /><LikeButton /><br /> */}\r\n                <Accordion>\r\n                  <Card>\r\n                    <Card.Header>\r\n                      <Accordion.Toggle as={Button} id={props.id} eventKey=\"0\">\r\n                        <span>Edit {props.name}</span>\r\n                      </Accordion.Toggle>\r\n                    </Card.Header>\r\n                  <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>\r\n                      <DinosaurEdit\r\n                        dinosaur={props.dinosaur}\r\n                        url={props.url}\r\n                        dinoId = {props.id}\r\n                        dinoName = {props.name}\r\n                        dinoSize = {props.size !== null ? props.size : ''}\r\n                        dinoWeight = {props.weight !== null ? props.weight : ''}\r\n                        dinoRange = {props.temporalRange !== null ? props.temporalRange : ''}\r\n                        dinoYear = {props.yearDiscovered !== null ? props.yearDiscovered : ''}\r\n                        dinoPic = {props.pictureUrl}\r\n                        dinoSummary = {props.summary !== null ? props.summary : ''}  /* the terinary operators in here just check to see if the prop exists so it does not pass null down to the edit form, because that makes the form uncontrolled. */\r\n                        era = { props.dinosaur.dino_type.era_id }\r\n                        dinoTypeId = {props.dinotypeId}\r\n\r\n                         />\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n                    <Card>\r\n                      <Card.Body>\r\n\r\n                      <button className=\"btn btn-danger\" onClick={handleShow}>Delete {props.name}</button>\r\n\r\n                      <DeleteConfirm showModal={show} handleClose = {handleClose} handleDelete = {props.handleDelete} dinosaur={props.dinosaur} dinosaurId={props.id} name={props.name} handleDelete = {props.handleDelete} />\r\n                        \r\n                    </Card.Body>\r\n                    </Card>\r\n                </Accordion>\r\n              </Card>\r\n            </Col>\r\n          </React.Fragment>\r\n        );\r\n      }\r\nDinosaurCard.defaultProps = {\r\n  dinoPic: 'https://ecdn.teacherspayteachers.com/thumbitem/Dinosaur-with-hand-sanitizer-and-face-mask-5487390-1587563440/original-5487390-1.jpg'\r\n\r\n}\r\n///so i need the commit button to change the div class to 'collapse show'\r\nexport default DinosaurCard","export const dinoTypeSelector = (url) => {\r\n  let dino;\r\nswitch (url) {\r\n  case 'Triassic Herbivore':\r\n  dino = '1'\r\n    break;\r\n  case 'Triassic Carnivore':\r\n    dino = '2'\r\n    break;\r\n   case 'Triassic Avian':\r\n    dino = '3'\r\n    break;\r\n  case 'Triassic Marine':\r\n    dino = '4'\r\n    break;\r\n  case 'Jurassic Herbivore':\r\n    dino = '5'\r\n    break;\r\n  case 'Jurassic Carnivore':\r\n    dino = '6'\r\n    break;\r\n    case 'Jurassic Avian':\r\n      dino = '7'\r\n      break;\r\n    case 'Jurassic Marine':\r\n      dino = '8'\r\n      break;\r\n    case 'Cretaceous Herbivore':\r\n      dino = '9'\r\n      break;\r\n    case 'Cretaceous Carnivore':\r\n      dino = '10'\r\n      break;\r\n    case 'Cretaceous Avian':\r\n      dino = '11'\r\n      break;\r\n    case 'Cretaceous Marine':\r\n      dino = '12'\r\n      break;\r\n  default:\r\n  console.log('it did not match anything')\r\n    break;\r\n  }\r\n  return dino\r\n}\r\n\r\nexport const eraSelector = (url) => {\r\n  if (url.includes('Triassic')){\r\n    return 1\r\n  } else if (url.includes('Jurassic')){\r\n    return 2\r\n  } else if (url.includes('Cretaceous')){\r\n    return 3\r\n  }\r\n}\r\n","import { dinoTypeSelector } from '../helpers/DinoSelector.js'\r\nimport { eraSelector } from '../helpers/DinoSelector.js'\r\n\r\nexport const addDinosaur = (data, url) => {\r\n  dinoTypeSelector(url)\r\n\r\n\r\n//since its loading from scratch I use dinoSelector and eraSelector helpers to complete the correct fetch URL, in lieu of a dinosaur object like in the others.\r\n  return (dispatch) => {\r\n    return fetch(`https://dino24.onrender.com/api/v1/eras/${eraSelector(url)}/dino_types/${dinoTypeSelector(url)}/dinosaurs`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then(response => response.json())\r\n\r\n    .then(dinosaur =>\r\n      // console.log(dinosaur)\r\n      dispatch({type: 'ADD_DINOSAUR', payload: dinosaur})\r\n      )\r\n  }\r\n}\r\n\r\n/// EXAMPLE URL - in reality i think i need to know the ERA and DINO TYPE and interpolate them into the URL.  (just add those options to the form and interpolate wth dot notation off of data)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addDinosaur} from '../actions/addDinosaur'\r\nimport { Form, Col, Button } from 'react-bootstrap';\r\n\r\nclass DinosaurInput extends React.Component {\r\nstate = {\r\n  name: '',\r\n  size: '',\r\n  weight: '',\r\n  temporal_range: '',\r\n  year_discovered: '',\r\n  picture_url: '',\r\n  summary: '',\r\n  dino_type_id: this.props.dinoType\r\n}\r\n\r\n\r\nhandleOnChange = (event) => {\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n}\r\n\r\nhandleOnSubmit = (event) => {\r\n  event.preventDefault()\r\n  this.props.addDinosaur(this.state, this.props.url)\r\n  this.setState(\r\n    { name: '',\r\n      size: '',\r\n      weight: '',\r\n      temporal_range: '',\r\n      year_discovered: '',\r\n      picture_url: '',\r\n      summary: '',\r\n      dino_type_id: ''\r\n    }\r\n  )\r\n  this.collapse()\r\n}\r\n\r\ncollapse = () => {\r\n  let toggleButton = document.getElementById('add')\r\n  toggleButton.click()\r\n\r\n}\r\n\r\n  render() {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <h5>Add a Dinosaur</h5>\r\n        <small className=\"form-text text-muted\">HINT: You can find most of the info below from the <a href=\"https://en.wikipedia.org/wiki/Portal:Mesozoic\" target=\"_blank\" rel='noreferrer'>Wikipedia Mesozoic Portal.</a>  At a minimum, please include the category, name and picture URL. </small>\r\n<br/>\r\n\r\n        <Form onSubmit={this.handleOnSubmit}>\r\n          <Form.Group controlId=\"formBasic\">\r\n            <Form.Label>Category: When did it live and what kind of dinosaur was it? </Form.Label>\r\n\r\n            <Form.Control as='select' custom\r\n              size=\"lg\"\r\n              name=\"dino_type_id\"\r\n              id=\"dino_type_id\"\r\n              value={this.props.dinoType}\r\n              onChange={this.handleOnChange}\r\n              required>\r\n              <option value=''></option>\r\n              <option value=\"1\">Triassic Herbivore</option>\r\n              <option value=\"2\">Triassic Carnivore</option>\r\n              <option value=\"3\">Triassic Avian</option>\r\n              <option value=\"4\">Triassic Marine</option>\r\n              <option value=\"5\">Jurassic Herbivore</option>\r\n              <option value=\"6\">Jurassic Carnivore</option>\r\n              <option value=\"7\">Jurassic Avian</option>\r\n              <option value=\"8\">Jurassic Marine</option>\r\n              <option value=\"9\">Cretaceous Herbivore</option>\r\n              <option value=\"10\">Cretaceous Carnivore</option>\r\n              <option value=\"11\">Cretaceous Avian</option>\r\n              <option value=\"12\">Cretaceous Marine</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n  <Form.Row>\r\n    <Form.Group as={Col}>\r\n          <Form.Label>Dinosaur Name</Form.Label>\r\n<br/><br/>\r\n          <Form.Control type='text' name='name' placeholder='Dinosaur Name' value={this.state.name} onChange={this.handleOnChange} required/>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Col}>\r\n          <Form.Label>Dinosaur Size</Form.Label>\r\n          <small  className=\"form-text text-muted\">In feet</small>\r\n          <Form.Control type='number' name='size' placeholder='Dinosaur Size' value={this.state.size} onChange={this.handleOnChange} />\r\n          </Form.Group>\r\n          <Form.Group as={Col}>\r\n          <Form.Label>Dinosaur Weight</Form.Label>\r\n          <small className=\"form-text text-muted\"><a href = 'https://www.google.com/search?q=convert+tons+to+pounds&oq=convert+tons+to+pounds' target=\"_blank\" rel='noreferrer'>Convert from tons</a></small>\r\n          <Form.Control type='number' name='weight' placeholder='Dinosaur Weight' value={this.state.weight} onChange={this.handleOnChange} />\r\n    </Form.Group>\r\n  </Form.Row>\r\n\r\n\r\n  <Form.Row>\r\n    <Form.Group as={Col}>\r\n        <Form.Label>Temporal Range</Form.Label>\r\n        <small className=\"form-text text-muted\">When did it live? Example: 150-140 MYA)</small>\r\n          <Form.Control type='text' name='temporal_range' placeholder='Temporal Range' value={this.state.temporal_range} onChange={this.handleOnChange} />\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col}>\r\n        <Form.Label>Year Discovered</Form.Label>\r\n<br/><br/>\r\n      <Form.Control type='number' name='year_discovered' placeholder='Year Discovered' value={this.state.year_discovered} onChange={this.handleOnChange} />\r\n    </Form.Group>\r\n    <Form.Group as={Col}>\r\n          <Form.Label>Picture URL</Form.Label>\r\n          <small className=\"form-text text-muted\">Google Images:  <a target=\"_blank\" rel='noreferrer' href={`https://www.google.com/search?tbm=isch&as_q=${this.state.name}&tbs=isz:lt,islt:4mp,sur:fmc`}>{this.state.name}</a></small>\r\n          <Form.Control type='url' name='picture_url' placeholder='Paste the URL of a picture of this dinosaur here.' value={this.state.picture_url} onChange={this.handleOnChange} required />\r\n\r\n    </Form.Group>\r\n  </Form.Row>\r\n\r\n<Form.Row>\r\n  <Form.Group>\r\n          <Form.Label id='description'>Fun Fact or Brief Description</Form.Label>\r\n          <br/>\r\n          <small className=\"form-text text-muted\">(500 Characters Max)</small>\r\n          <Form.Control as='textarea' name='summary' maxLength=\"500\" id='description' rows=\"5\" cols=\"80\" placeholder='Description' value={this.state.summary} onChange={this.handleOnChange} />\r\n  </Form.Group>\r\n          </Form.Row>\r\n          <Button type='submit' variant=\"primary\" size='lg' block>Add Dinosaur!</Button>\r\n\r\n  </Form>\r\n\r\n</React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, {addDinosaur})(DinosaurInput)\r\n","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\n \r\nconst DinosaursList = (props) => {\r\n\r\n// <div className=\"d-flex mt-5 justify-content-center\">\r\n  return (\r\n    <Row xs={1} md={4} className=\"g-4\">\r\n      \r\n      \r\n        {props.listDinos}\r\n       \r\n      \r\n    </Row>\r\n  )\r\n}\r\n\r\n\r\nexport default DinosaursList\r\n","\r\nexport function fetchDinosaurs(url) {\r\n\r\nreturn (dispatch) => {\r\n\r\n  const dinoTypeSelector = (url) => {\r\n    let dino;\r\n  switch (url) {\r\n    case 'Triassic Herbivore':\r\n    dino = '1'\r\n      break;\r\n    case 'Triassic Carnivore':\r\n      dino = '2'\r\n      break;\r\n     case 'Triassic Avian':\r\n      dino = '3'\r\n      break;\r\n    case 'Triassic Marine':\r\n      dino = '4'\r\n      break;\r\n    case 'Jurassic Herbivore':\r\n      dino = '5'\r\n      break;\r\n    case 'Jurassic Carnivore':\r\n      dino = '6'\r\n      break;\r\n      case 'Jurassic Avian':\r\n        dino = '7'\r\n        break;\r\n      case 'Jurassic Marine':\r\n        dino = '8'\r\n        break;\r\n      case 'Cretaceous Herbivore':\r\n        dino = '9'\r\n        break;\r\n      case 'Cretaceous Carnivore':\r\n        dino = '10'\r\n        break;\r\n      case 'Cretaceous Avian':\r\n        dino = '11'\r\n        break;\r\n      case 'Cretaceous Marine':\r\n        dino = '12'\r\n        break;\r\n    default:\r\n    console.log('it did not match anything')\r\n      break;\r\n    }\r\n    return dino\r\n  }\r\n\r\n  const eraSelector = (url) => {\r\n\r\n    if (url.includes('Triassic')){\r\n      return 1\r\n    } else if (url.includes('Jurassic')){\r\n      return 2\r\n    } else if (url.includes('Cretaceous')){\r\n      return 3\r\n    }\r\n  }\r\n\r\n  return fetch(`https://dino24.onrender.com/api/v1/eras/${eraSelector(url)}/dino_types/${dinoTypeSelector(url)}/dinosaurs`)  ///fetching to different urls based on the params from the first page.\r\n  .then(resp => resp.json())\r\n  .then(dinosaurs => dispatch({\r\n      type: 'FETCH_DINOSAURS',\r\n      payload: dinosaurs\r\n      }))\r\n    }\r\n  }\r\n\r\n\r\nexport default fetchDinosaurs\r\n","import React from 'react'\r\nimport DinosaurCard from '../components/DinosaurCard'\r\nimport DinosaurInput from '../components/DinosaurInput'\r\nimport DinosaursList from '../components/DinosaursList'\r\nimport {connect} from 'react-redux'\r\nimport {fetchDinosaurs} from '../actions/fetchDinosaurs'\r\nimport { addDinosaur } from '../actions/addDinosaur'\r\nimport { editDinosaur } from '../actions/editDinosaur'\r\nimport { deleteDinosaur } from '../actions/deleteDinosaur'\r\nimport { dinoTypeSelector } from '../helpers/DinoSelector.js'\r\n\r\nimport {Container, Button } from 'react-bootstrap'\r\n\r\nclass DinosaursContainer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n          url: this.routeParam = props.match.params.name,\r\n          showHide: false,\r\n          dinosaurs: []\r\n      };\r\n      this.hideComponent = this.hideComponent.bind(this);\r\n    }\r\n\r\n  componentDidMount(){\r\n    this.props.fetchDinosaurs(this.state.url)   ///accessing the function through props (instead of on its own) allows us to connect function with Redux Store; arg telling it which dinosaurs to fetch based on params\r\n  }\r\n\r\nhandleDelete = (dinosaur) => {\r\n    this.props.deleteDinosaur(dinosaur.id, dinosaur.dino_type.id, dinosaur.dino_type.era_id)\r\n  }\r\n\r\nhideComponent(name) {\r\n  if (name === 'showHide') {\r\n    this.setState({ showHide: !this.state.showHide });\r\n  }\r\n}\r\n\r\nlistDinos = () => {\r\n\r\n  if (this.props.dinosaurs.dinosaurs) {\r\n    return (\r\n      this.props.dinosaurs.dinosaurs.map((dinosaur, index) =>\r\n                 <div key={dinosaur.id}>\r\n                    <DinosaurCard\r\n                      id={dinosaur.id}\r\n                      name={dinosaur.name}\r\n                      size={dinosaur.size}\r\n                      weight={dinosaur.weight}\r\n                      temporalRange={dinosaur.temporal_range}\r\n                      yearDiscovered={dinosaur.year_discovered}\r\n                      pictureUrl={dinosaur.picture_url}\r\n                      summary={dinosaur.summary}\r\n                      dinotypeId={dinosaur.dino_type_id}\r\n                      handleDelete={this.handleDelete}\r\n                      dinosaur = {dinosaur}\r\n                      />\r\n                </div>)\r\n              )\r\n            }\r\n          }\r\n\r\n  render(){\r\n    const { showHide } = this.state;\r\n\r\n    return (\r\n      \r\n\r\n\r\n      <Container id=\"dino-container\">\r\n        <div className=\"text-center\">\r\n          <Button \r\n          id=\"add\" \r\n          variant=\"success\" \r\n          onClick={() => this.hideComponent(\"showHide\")}>\r\n            \r\n            {showHide === false ? \"Add Dinosaur to Collection\" : \"Hide Form\"}\r\n          </Button>\r\n        \r\n        </div>\r\n        \r\n        <div> {showHide && <DinosaurInput url={this.state.url} dinoType={dinoTypeSelector(this.state.url)}/>}<br /></div>\r\n\r\n        <DinosaursList listDinos= {this.listDinos()}/>\r\n\r\n\r\n      </Container>\r\n\r\n      \r\n    \r\n      )\r\n    }\r\n  }\r\n     \r\nfunction mapStateToProps(state) {\r\n  return {\r\n    dinosaurs: state.dinosaurs,\r\n    url: state.url\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {fetchDinosaurs, addDinosaur, editDinosaur, deleteDinosaur})(DinosaursContainer)   //here, fetchDinosaurs is sitting in for mapDispatchToProps and doing this makes IT a prop.","export const deleteDinosaur = (dinosaurId, dinoTypeId, eraId) => {\r\n\r\n    return (dispatch) => {\r\n\r\n    fetch(`https://dino24.onrender.com/api/v1/eras/${eraId}/dino_types/${dinoTypeId}/dinosaurs/${dinosaurId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then(dinosaur => dispatch({ type: 'DELETE_DINOSAUR', dinosaurId }))\r\n\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport ErasContainer from './containers/ErasContainer'\r\nimport DinoTypesContainer from './containers/DinoTypesContainer'\r\nimport DinosaursContainer from './containers/DinosaursContainer'\r\nimport DinosaurInput from './components/DinosaurInput'\r\nimport DinosaurEdit from './components/DinosaurEdit'\r\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom';\r\nimport { Jumbotron } from 'react-bootstrap'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\n\r\nclass App extends React.Component {\r\n  \r\n\r\ncomponentDidMount(){\r\n  document.getElementById('main-heading').click();\r\n}\r\n\r\nrenderTooltip = (props) => (\r\n  <Tooltip {...props}>\r\n    Choose an Era...\r\n  </Tooltip>\r\n);\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n      <div className=\"App\">\r\n        <Jumbotron>\r\n         \r\n      <OverlayTrigger\r\n        placement=\"bottom\"\r\n        delay={{ show: 250, hide: 400 }}\r\n        overlay={this.renderTooltip}\r\n      > \r\n\r\n        <Link to='/dinofinder-frontend'>\r\n          <h1 className='text-center' id=\"main-heading\">D i n o F i n d e r </h1>\r\n        </Link>\r\n        </OverlayTrigger>,\r\n  \r\n      <br />\r\n  \r\n        <center><h5>The ancient creature collection anyone can edit!</h5></center>\r\n  \r\n          </Jumbotron>\r\n\r\n      <Switch>\r\n        \r\n          <Route exact path='/dinofinder-frontend' component={ErasContainer} />\r\n          <Route exact path='/:name/dino_types' component={DinoTypesContainer} />\r\n          <Route exact path='/:name/dinosaurs' component={DinosaursContainer} />\r\n          <Route exact path='/dinosaurs/new' component={DinosaurInput} />\r\n          <Route exact path='/dinosaurs/:name/edit' component={DinosaurEdit} />\r\n        </Switch>\r\n\r\n      </div>\r\n      </Router>\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\n//way of accessing values in our store as props!\r\n// const mapStateToProps = () => {\r\n//   return {\r\n//     eras: this.state.eras,\r\n//     dinosaurs: this.state.dinosaurs\r\n//\r\n//   }\r\n// }\r\n\r\n//gives us ability to dispatch new actions to our store directly from this component\r\n\r\n\r\nexport default connect(null)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport dinosaursReducer from './reducers/dinosaursReducer'\r\nimport erasReducer from './reducers/erasReducer'\r\nimport dinoTypesReducer from './reducers/dinoTypesReducer'\r\nimport { combineReducers } from \"redux\";\r\nimport App from './App';\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n \r\n\r\nconst rootReducer = combineReducers({\r\n  eras: erasReducer, //this causes the unwanted nesting.\r\n  dinotypes: dinoTypesReducer,\r\n  dinosaurs: dinosaursReducer\r\n})\r\n\r\nconst composeEnhancers =  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n \r\n\r\nReactDOM.render(\r\n  \r\n    <Provider store = { store }>\r\n      <App />\r\n      \r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","export default function erasReducer(state = { eras: [] }, action) {\r\n\r\n  switch (action.type) {\r\n\r\n    case 'FETCH_ERAS':\r\n      return { ...state,\r\n        eras: action.payload }\r\n   default:\r\n      return state\r\n    }\r\n}\r\n","export default function dinoTypesReducer(state = {dinotypes: []}, action){\r\n\r\n  switch (action.type) {\r\n    case 'FETCH_DINOTYPES':\r\n      return { ...state,\r\n        dinotypes: action.payload }\r\n   default:\r\n      return state\r\n    }\r\n}\r\n","\r\nexport default function dinosaursResducer(state = { dinosaurs: [] }, action){\r\n\r\n  switch (action.type) {\r\n    case 'FETCH_DINOSAURS':\r\n        return {\r\n          ...state,\r\n          dinosaurs: action.payload\r\n        }\r\n  case 'ADD_DINOSAUR':\r\n         return {\r\n           ...state,\r\n             dinosaurs: [...state.dinosaurs, action.payload]\r\n         }\r\n  case 'DELETE_DINOSAUR':\r\n           return {\r\n        ...state,\r\n        dinosaurs: [...state.dinosaurs.filter(dinosaur => dinosaur.id === action.dinosaurId ? false : true)]   ///returning a copy of the state as well as an array of all dinos other than the one that was just deleted.\r\n      }\r\n      case 'EDIT_DINOSAUR':\r\n    ///you need to return the state WITHOUT the dinosaur you edited, IF THE DINOSAUR.DINOTYPEID is different from the actual DINOTYPE ID for that page...\r\n\r\n\r\n        let dinos = state.dinosaurs.map(dinosaur => {\r\n          if (dinosaur.id === action.payload.id) {    ///if dinosaur id = payload id.  also need conditional for era.  its saying era not found becaus the era HAS changed but the dino is still in state.  you need to tell it not to return that dino if the era been changed.  hmm.\r\n            return action.payload  ///return the modified dinosaur card\r\n          } else {\r\n            return dinosaur\r\n          }  ///either way we're chucking it into dinos.  we need a way to exclude it from dinos if it is a different era.\r\n        })\r\n\r\n        let first = state.dinosaurs?.[0].dino_type_id  ///finally solved it.  now you are creating dinos above and returning edits as needed but when you return the whole state, you make sure you only return the dinos with the proper category id based on item 0 in the array (if youre editing there will always be a 0.)\r\n          return {...state, dinosaurs: dinos.filter(dino => dino.dino_type_id === first) }  //return state array with any updated dino card but WITHOUT any dinosaurs of another era (fixes era change bug)\r\n\r\n\r\n          default:\r\n           return state\r\n        }\r\n      }\r\n"],"sourceRoot":""}